
    -----------------------------------------------------------------------
          Psi4: An Open-Source Ab Initio Electronic Structure Package
                               Psi4 1.2a1.dev597 

                         Git: Rev {master} 0ddc90a 


    R. M. Parrish, L. A. Burns, D. G. A. Smith, A. C. Simmonett,
    A. E. DePrince III, E. G. Hohenstein, U. Bozkaya, A. Yu. Sokolov,
    R. Di Remigio, R. M. Richard, J. F. Gonthier, A. M. James,
    H. R. McAlexander, A. Kumar, M. Saitow, X. Wang, B. P. Pritchard,
    P. Verma, H. F. Schaefer III, K. Patkowski, R. A. King, E. F. Valeev,
    F. A. Evangelista, J. M. Turney, T. D. Crawford, and C. D. Sherrill,
    J. Chem. Theory Comput. 13(7) pp 3185--3197 (2017).
    (doi: 10.1021/acs.jctc.7b00174)

    -----------------------------------------------------------------------


    Psi4 started on: Wednesday, 04 October 2017 01:59PM

    Process ID:  52010
    PSIDATADIR: /usr/local/psi4/share/psi4
    Memory:     500.0 MiB
    Threads:    1
    
  ==> Input File <==

--------------------------------------------------------------------------
"""This is a template for psi4 input format."""
import numpy
import sys

from openfermion.config import *
from openfermion.ops._interaction_tensor import (one_body_basis_change,
                                                 two_body_basis_change)
from openfermion.utils import MolecularData
from numpy import array

sys.path.append('/Users/MacBookPro-Nick/opt/OpenFermion-Psi4/openfermionpsi4')
from _psi4_conversion_functions import *


# Set memory that job can use in megabytes.
memory 8000 mb

# Initialize molecular data.
_description = '0.74'
if _description == 'None':
    _description = None
molecule = MolecularData([('H', (0.0, 0.0, 0.0)), ('He', (0.0, 0.0, 0.740848149))],
                         'sto-3g',
                         1,
                         1,
                         _description,
                          filename='/Users/MacBookPro-Nick/opt/representability/representability/fermions/molecules/H1-He1_sto-3g_singlet_1+_0.74')

# Set molecular geometry and symmetry.
molecule mol {
H 0.0 0.0 0.0
He 0.0 0.0 0.740848149
symmetry c1
}
mol.set_multiplicity(1)
mol.set_molecular_charge(1)

# Set reference and guess.
if molecule.multiplicity == 1:
    set reference rhf
    set guess sad
else:
    set reference rohf
    set guess gwh

# Set global parameters of calculation.
set globals {
    basis sto-3g
    freeze_core false
    fail_on_maxiter true
    df_scf_guess false
    opdm true
    tpdm true
    soscf false
    scf_type pk
    maxiter 1e6
    num_amps_print 1e6
    r_convergence 1e-6
    d_convergence 1e-6
    e_convergence 1e-6
    ints_tolerance EQUALITY_TOLERANCE
    damping_percentage 0
}

# Run self-consistent field (SCF) calculation.
if True:
    try:
        hf_energy, hf_wavefunction = energy('scf', return_wfn=True)
        if False:
            print('Hartree-Fock energy for {} ({} electrons) is {}.'.format(
                molecule.name, molecule.n_electrons, hf_energy))
    except:
        if False:
            print('WARNING: SCF calculation failed.')
        else:
            raise
    else:
        # Get orbitals and Fock matrix.
        molecule.hf_energy = hf_energy
        molecule.nuclear_repulsion = mol.nuclear_repulsion_energy()
        molecule.canonical_orbitals = numpy.asarray(hf_wavefunction.Ca())
        molecule.n_orbitals = molecule.canonical_orbitals.shape[0]
        molecule.n_qubits = 2 * molecule.n_orbitals
        molecule.orbital_energies = numpy.asarray(hf_wavefunction.epsilon_a())
        molecule.fock_matrix = numpy.asarray(hf_wavefunction.Fa())

        # Get integrals using MintsHelper.
        mints = MintsHelper(hf_wavefunction.basisset())
        molecule.one_body_integrals = one_body_basis_change(
            numpy.asarray(mints.ao_kinetic()), molecule.canonical_orbitals)
        molecule.one_body_integrals += one_body_basis_change(
            numpy.asarray(mints.ao_potential()), molecule.canonical_orbitals)
        two_body_integrals = numpy.asarray(mints.ao_eri())
        two_body_integrals.reshape((molecule.n_orbitals, molecule.n_orbitals,
                                    molecule.n_orbitals, molecule.n_orbitals))
        two_body_integrals = numpy.einsum('psqr', two_body_integrals)
        two_body_integrals = two_body_basis_change(
            two_body_integrals, molecule.canonical_orbitals)
        molecule.two_body_integrals = two_body_integrals
        molecule.save()


# Perform MP2 energy calculation if there are at least two electrons.
if False:
    try:
        assert molecule.n_electrons > 1
        mp2_energy = energy('mp2')
        if False:
            print('MP2 energy for {} ({} electrons) is {}.'.format(
                molecule.name, molecule.n_electrons, mp2_energy))
    except:
        if False:
            print('WARNING: MP2 calculation failed.')
        else:
            raise
    else:
        molecule.mp2_energy = mp2_energy
        molecule.save()


# Perform configuration interaction singles and doubles (CISD) calculation.
if False:
    set qc_module detci
    try:
        cisd_energy, cisd_wavefunction = energy('cisd', return_wfn=True)
        if False:
            print('CISD energy for {} ({} electrons) is {}.'.format(
                molecule.name, molecule.n_electrons, cisd_energy))
    except:
        if False:
            print('WARNING: CISD calculation failed.')
        else:
            raise
    else:
        # For the functions below, "a" and "b" refer to "up and "down" spins.
        molecule.cisd_energy = cisd_energy

        # Get 1-RDM from CISD calculation.
        cisd_one_rdm_a = numpy.array(cisd_wavefunction.get_opdm(
            0, 0, 'A', True)).reshape(molecule.n_orbitals, molecule.n_orbitals)
        cisd_one_rdm_b = numpy.array(cisd_wavefunction.get_opdm(
            0, 0, 'B', True)).reshape(molecule.n_orbitals, molecule.n_orbitals)

        # Get 2-RDM from CISD calculation.
        cisd_two_rdm_aa = numpy.array(cisd_wavefunction.get_tpdm(
            'AA', False)).reshape(molecule.n_orbitals, molecule.n_orbitals,
                                  molecule.n_orbitals, molecule.n_orbitals)
        cisd_two_rdm_ab = numpy.array(cisd_wavefunction.get_tpdm(
            'AB', False)).reshape(molecule.n_orbitals, molecule.n_orbitals,
                                  molecule.n_orbitals, molecule.n_orbitals)
        cisd_two_rdm_bb = numpy.array(cisd_wavefunction.get_tpdm(
            'BB', False)).reshape(molecule.n_orbitals, molecule.n_orbitals,
                                  molecule.n_orbitals, molecule.n_orbitals)

        # Get overall RDMs.
        cisd_one_rdm, cisd_two_rdm = unpack_spatial_rdm(
            cisd_one_rdm_a, cisd_one_rdm_b, cisd_two_rdm_aa,
            cisd_two_rdm_ab, cisd_two_rdm_bb)

        # Store 1-RDM in molecule file, 2-RDM separately in other file.
        molecule.cisd_one_rdm = cisd_one_rdm
        molecule.cisd_two_rdm = cisd_two_rdm
        molecule.save()


# Perform exact diagonalization.
if True:
    set qc_module detci
    try:
        fci_energy, fci_wavefunction = energy('fci', return_wfn=True)
        if False:
            print('FCI energy for {} ({} electrons) is {}.'.format(
                molecule.name, molecule.n_electrons, fci_energy))
    except:
        if False:
            print('WARNING: FCI calculation failed.')
        else:
            raise
    else:
        # For the functions below, "a" and "b" refer to "up and "down" spins.
        molecule.fci_energy = fci_energy

        # Get 1-RDM from FCI calculation.
        fci_one_rdm_a = numpy.array(fci_wavefunction.get_opdm(
            0, 0, 'A', True)).reshape(molecule.n_orbitals, molecule.n_orbitals)
        fci_one_rdm_b = numpy.array(fci_wavefunction.get_opdm(
            0, 0, 'B', True)).reshape(molecule.n_orbitals, molecule.n_orbitals)

        # Get 2-RDM from FCI calculation.
        fci_two_rdm_aa = numpy.array(fci_wavefunction.get_tpdm(
            'AA', False)).reshape(molecule.n_orbitals, molecule.n_orbitals,
                                  molecule.n_orbitals, molecule.n_orbitals)
        fci_two_rdm_ab = numpy.array(fci_wavefunction.get_tpdm(
            'AB', False)).reshape(molecule.n_orbitals, molecule.n_orbitals,
                                  molecule.n_orbitals, molecule.n_orbitals)
        fci_two_rdm_bb = numpy.array(fci_wavefunction.get_tpdm(
            'BB', False)).reshape(molecule.n_orbitals, molecule.n_orbitals,
                                  molecule.n_orbitals, molecule.n_orbitals)

        # Get overall RDMs.
        fci_one_rdm, fci_two_rdm = unpack_spatial_rdm(
            fci_one_rdm_a, fci_one_rdm_b,
            fci_two_rdm_aa, fci_two_rdm_ab, fci_two_rdm_bb)

        # Store 1-RDM in molecule file, 2-RDM separately in other file.
        molecule.fci_one_rdm = fci_one_rdm
        molecule.fci_two_rdm = fci_two_rdm
        molecule.save()


# Perform coupled cluster singles and doubles (CCSD) calculation.
if False:
    set qc_module ccenergy
    try:
        ccsd_energy = energy('ccsd')
        if False:
            print('CCSD energy for {} ({} electrons) is {}.'.format(
                molecule.name, molecule.n_electrons, ccsd_energy))
    except:
        if False:
            print('WARNING: CCSD calculation failed.')
        else:
            raise
    else:
        molecule.ccsd_energy = ccsd_energy

        # Merge CC amplitudes into molecule by parsing
        psi_filename = outfile_name()
        single_cc_amplitudes, double_cc_amplitudes = (
            parse_psi4_ccsd_amplitudes(
                2 * molecule.n_orbitals,
                molecule.get_n_alpha_electrons(),
                molecule.get_n_beta_electrons(),
                psi_filename))

        molecule.ccsd_single_amps = single_cc_amplitudes
        molecule.ccsd_double_amps = double_cc_amplitudes
        molecule.save()
--------------------------------------------------------------------------

  Memory set to   7.451 GiB by Python driver.

*** tstart() called on Lobster.local
*** at Wed Oct  4 13:59:14 2017

   => Loading Basis Set <=

    Name: STO-3G
    Role: ORBITAL
    Keyword: BASIS
    atoms 1 entry H          line    19 file /usr/local/psi4/share/psi4/basis/sto-3g.gbs 
    atoms 2 entry HE         line    25 file /usr/local/psi4/share/psi4/basis/sto-3g.gbs 


         ---------------------------------------------------------
                                   SCF
            by Justin Turney, Rob Parrish, Andy Simmonett
                             and Daniel Smith
                              RHF Reference
                        1 Threads,   7629 MiB Core
         ---------------------------------------------------------

  ==> Geometry <==

    Molecular point group: c1
    Full point group: C_inf_v

    Geometry (in Angstrom), charge = 1, multiplicity = 1:

       Center              X                  Y                   Z               Mass       
    ------------   -----------------  -----------------  -----------------  -----------------
           H          0.000000000000     0.000000000000    -0.591829888110     1.007825032070
          HE          0.000000000000     0.000000000000     0.149018260890     4.002603254150

  Running in c1 symmetry.

  Rotational constants: A = ************  B =     38.14918  C =     38.14918 [cm^-1]
  Rotational constants: A = ************  B = 1143683.77790  C = 1143683.77790 [MHz]
  Nuclear repulsion =    1.428571318708931

  Charge       = 1
  Multiplicity = 1
  Electrons    = 2
  Nalpha       = 1
  Nbeta        = 1

  ==> Algorithm <==

  SCF Algorithm Type is PK.
  DIIS enabled.
  MOM disabled.
  Fractional occupation disabled.
  Guess Type is SAD.
  Energy threshold   = 1.00e-06
  Density threshold  = 1.00e-06
  Integral threshold = 0.00e+00

  ==> Primary Basis <==

  Basis Set: STO-3G
    Blend: STO-3G
    Number of shells: 2
    Number of basis function: 2
    Number of Cartesian functions: 2
    Spherical Harmonics?: true
    Max angular momentum: 0

  ==> Pre-Iterations <==

   -------------------------------------------------------
    Irrep   Nso     Nmo     Nalpha   Nbeta   Ndocc  Nsocc
   -------------------------------------------------------
     A          2       2       0       0       0       0
   -------------------------------------------------------
    Total       2       2       1       1       1       0
   -------------------------------------------------------

  ==> Integral Setup <==

  Using in-core PK algorithm.
   Calculation information:
      Number of atoms:                   2
      Number of AO shells:               2
      Number of primitives:              6
      Number of atomic orbitals:         2
      Number of basis functions:         2

      Integral cutoff                 1.00e-12
      Number of threads:                 1

  Performing in-core PK
  Using 12 doubles for integral storage.
  We computed 6 shell quartets total.
  Whereas there are 6 unique shell quartets.
  ==> DiskJK: Disk-Based J/K Matrices <==

    J tasked:                  Yes
    K tasked:                  Yes
    wK tasked:                  No
    Memory (MB):              5722
    Schwarz Cutoff:          1E-12

    OpenMP threads:              1
  Minimum eigenvalue in the overlap matrix is 4.3971052414E-01.
  Using Symmetric Orthogonalization.

  SCF Guess: Superposition of Atomic Densities via on-the-fly atomic UHF.

  ==> Iterations <==

                        Total Energy        Delta E     RMS |[F,P]|

   @RHF iter   0:    -2.26943827896208   -2.26944e+00   6.71797e-02 
   @RHF iter   1:    -2.83313573110063   -5.63697e-01   1.71354e-02 
   @RHF iter   2:    -2.83403903734010   -9.03306e-04   2.64812e-03 DIIS/DAMP
   @RHF iter   3:    -2.83406089610371   -2.18588e-05   1.05698e-05 DIIS/DAMP
   @RHF iter   4:    -2.83406089645130   -3.47595e-10   2.40976e-08 DIIS/DAMP

  ==> Post-Iterations <==

    Orbital Energies (a.u.)
    -----------------------

    Doubly Occupied:                                                      

       1A     -1.659255  

    Virtual:                                                              

       2A     -0.146834  

    Final Occupation by Irrep:
              A 
    DOCC [     1 ]

  Energy converged.

  @RHF Final Energy:    -2.83406089645130

   => Energetics <=

    Nuclear Repulsion Energy =              1.4285713187089308
    One-Electron Energy =                  -5.2067554000186203
    Two-Electron Energy =                   0.9441231848583888
    Total Energy =                         -2.8340608964513003



Properties will be evaluated at   0.000000,   0.000000,   0.000000 Bohr

Properties computed using the SCF density matrix

  Nuclear Dipole Moment: (a.u.)
     X:     0.0000      Y:     0.0000      Z:    -0.5552

  Electronic Dipole Moment: (a.u.)
     X:     0.0000      Y:     0.0000      Z:    -0.2219

  Dipole Moment: (a.u.)
     X:     0.0000      Y:     0.0000      Z:    -0.7771     Total:     0.7771

  Dipole Moment: (Debye)
     X:     0.0000      Y:     0.0000      Z:    -1.9753     Total:     1.9753


*** tstop() called on Lobster.local at Wed Oct  4 13:59:15 2017
Module time:
	user time   =       0.14 seconds =       0.00 minutes
	system time =       0.03 seconds =       0.00 minutes
	total time  =          1 seconds =       0.02 minutes
Total time:
	user time   =       0.14 seconds =       0.00 minutes
	system time =       0.03 seconds =       0.00 minutes
	total time  =          1 seconds =       0.02 minutes

*** tstart() called on Lobster.local
*** at Wed Oct  4 13:59:15 2017

   => Loading Basis Set <=

    Name: STO-3G
    Role: ORBITAL
    Keyword: BASIS
    atoms 1 entry H          line    19 file /usr/local/psi4/share/psi4/basis/sto-3g.gbs 
    atoms 2 entry HE         line    25 file /usr/local/psi4/share/psi4/basis/sto-3g.gbs 


         ---------------------------------------------------------
                                   SCF
            by Justin Turney, Rob Parrish, Andy Simmonett
                             and Daniel Smith
                              RHF Reference
                        1 Threads,   7629 MiB Core
         ---------------------------------------------------------

  ==> Geometry <==

    Molecular point group: c1
    Full point group: C_inf_v

    Geometry (in Angstrom), charge = 1, multiplicity = 1:

       Center              X                  Y                   Z               Mass       
    ------------   -----------------  -----------------  -----------------  -----------------
           H          0.000000000000     0.000000000000    -0.591829888110     1.007825032070
          HE          0.000000000000     0.000000000000     0.149018260890     4.002603254150

  Running in c1 symmetry.

  Rotational constants: A = ************  B =     38.14918  C =     38.14918 [cm^-1]
  Rotational constants: A = ************  B = 1143683.77790  C = 1143683.77790 [MHz]
  Nuclear repulsion =    1.428571318708931

  Charge       = 1
  Multiplicity = 1
  Electrons    = 2
  Nalpha       = 1
  Nbeta        = 1

  ==> Algorithm <==

  SCF Algorithm Type is PK.
  DIIS enabled.
  MOM disabled.
  Fractional occupation disabled.
  Guess Type is SAD.
  Energy threshold   = 1.00e-06
  Density threshold  = 1.00e-06
  Integral threshold = 0.00e+00

  ==> Primary Basis <==

  Basis Set: STO-3G
    Blend: STO-3G
    Number of shells: 2
    Number of basis function: 2
    Number of Cartesian functions: 2
    Spherical Harmonics?: true
    Max angular momentum: 0

  ==> Pre-Iterations <==

   -------------------------------------------------------
    Irrep   Nso     Nmo     Nalpha   Nbeta   Ndocc  Nsocc
   -------------------------------------------------------
     A          2       2       0       0       0       0
   -------------------------------------------------------
    Total       2       2       1       1       1       0
   -------------------------------------------------------

  ==> Integral Setup <==

  Using in-core PK algorithm.
   Calculation information:
      Number of atoms:                   2
      Number of AO shells:               2
      Number of primitives:              6
      Number of atomic orbitals:         2
      Number of basis functions:         2

      Integral cutoff                 1.00e-12
      Number of threads:                 1

  Performing in-core PK
  Using 12 doubles for integral storage.
  We computed 6 shell quartets total.
  Whereas there are 6 unique shell quartets.
  ==> DiskJK: Disk-Based J/K Matrices <==

    J tasked:                  Yes
    K tasked:                  Yes
    wK tasked:                  No
    Memory (MB):              5722
    Schwarz Cutoff:          1E-12

    OpenMP threads:              1
  Minimum eigenvalue in the overlap matrix is 4.3971052414E-01.
  Using Symmetric Orthogonalization.

  SCF Guess: Superposition of Atomic Densities via on-the-fly atomic UHF.

  ==> Iterations <==

                        Total Energy        Delta E     RMS |[F,P]|

   @RHF iter   0:    -2.26943827896208   -2.26944e+00   6.71797e-02 
   @RHF iter   1:    -2.83313573110063   -5.63697e-01   1.71354e-02 
   @RHF iter   2:    -2.83403903734010   -9.03306e-04   2.64812e-03 DIIS/DAMP
   @RHF iter   3:    -2.83406089610371   -2.18588e-05   1.05698e-05 DIIS/DAMP
   @RHF iter   4:    -2.83406089645130   -3.47597e-10   2.40976e-08 DIIS/DAMP

  ==> Post-Iterations <==

    Orbital Energies (a.u.)
    -----------------------

    Doubly Occupied:                                                      

       1A     -1.659255  

    Virtual:                                                              

       2A     -0.146834  

    Final Occupation by Irrep:
              A 
    DOCC [     1 ]

  Energy converged.

  @RHF Final Energy:    -2.83406089645130

   => Energetics <=

    Nuclear Repulsion Energy =              1.4285713187089311
    One-Electron Energy =                  -5.2067554000186220
    Two-Electron Energy =                   0.9441231848583890
    Total Energy =                         -2.8340608964513021



Properties will be evaluated at   0.000000,   0.000000,   0.000000 Bohr

Properties computed using the SCF density matrix

  Nuclear Dipole Moment: (a.u.)
     X:     0.0000      Y:     0.0000      Z:    -0.5552

  Electronic Dipole Moment: (a.u.)
     X:     0.0000      Y:     0.0000      Z:    -0.2219

  Dipole Moment: (a.u.)
     X:     0.0000      Y:     0.0000      Z:    -0.7771     Total:     0.7771

  Dipole Moment: (Debye)
     X:     0.0000      Y:     0.0000      Z:    -1.9753     Total:     1.9753


*** tstop() called on Lobster.local at Wed Oct  4 13:59:15 2017
Module time:
	user time   =       0.11 seconds =       0.00 minutes
	system time =       0.01 seconds =       0.00 minutes
	total time  =          0 seconds =       0.00 minutes
Total time:
	user time   =       0.28 seconds =       0.00 minutes
	system time =       0.04 seconds =       0.00 minutes
	total time  =          1 seconds =       0.02 minutes
 MINTS: Wrapper to libmints.
   by Justin Turney

   Calculation information:
      Number of threads:                 1
      Number of atoms:                   2
      Number of AO shells:               2
      Number of SO shells:               2
      Number of primitives:              6
      Number of atomic orbitals:         2
      Number of basis functions:         2

      Number of irreps:                  1
      Integral cutoff                 0.00e+00
      Number of functions per irrep: [   2 ]

 OEINTS: Overlap, kinetic, potential, dipole, and quadrupole integrals
         stored in file 35.

      Computing two-electron integrals...done
      Computed 6 non-zero two-electron integrals.
        Stored in file 33.


         ---------------------------------------------------------
                          Configuration Interaction
                            (a 'D E T C I' module)

                 C. David Sherrill, Daniel G. A. Smith, and
                              Matt L. Leininger
         ---------------------------------------------------------


   ==> Parameters <==

    EX LEVEL       =        2      H0 BLOCKSIZE  =     1000
    VAL EX LEVEL   =        0      H0 GUESS SIZE =     1000
    H0COUPLINGSIZE =        0      H0 COUPLING   =       NO
    MAXITER        =       24      NUM PRINT     =       20
    NUM ROOTS      =        1      ICORE         =        1
    PRINT LVL      =        1      FCI           =      YES
    R CONV         = 1.00e-06      MIXED         =      YES
    E CONV         = 1.00e-06      MIXED4        =      YES
    R4S            =       NO      REPL OTF      =       NO
    DIAG METHOD    =      SEM      FOLLOW ROOT   =        0
    PRECONDITIONER = DAVIDSON      UPDATE        = DAVIDSON
    S              =   0.0000      Ms0           =      YES
    GUESS VECTOR   =  H0BLOCK      OPENTYPE      =     NONE
    COLLAPSE SIZE  =        1      HD AVG        = EVANGELISTI
    MAX NUM VECS   =       25      REF SYM       =     AUTO
    IOPEN        =       NO

    EX ALLOW       =  1  1 
    STATE AVERAGE  =  0(1.00) 

   ==> CI Orbital and Space information <==

   ------------------------------------
               Space    Total     A
   ------------------------------------
                 Nso        2     2
                 Nmo        2     2
               Ndocc        1     1
               Nsocc        0     0
   ------------------------------------
              CI Spaces
   ------------------------------------
        Dropped DOCC        0     0
              Active        2     2
        Dropped UOCC        0     0
   ------------------------------------

   ==> Setting up CI strings <==

    There are 2 alpha and 2 beta strings
    The CI space requires 4 (4.00E+00) determinants and 1 blocks

   ==> Transforming CI integrals <==

	Presorting SO-basis two-electron integrals.
	Sorting File: SO Ints (nn|nn) nbuckets = 1
	Transforming the one-electron integrals and constructing Fock matrices
	Starting first half-transformation.
	Sorting half-transformed integrals.
	First half integral transformation complete.
	Starting second half-transformation.
	Two-electron integral transformation complete.

   ==> Starting CI iterations <==

    H0 Block Eigenvalue =  -2.84383508

    Simultaneous Expansion Method (Block Davidson Method)
    Using 1 initial trial vectors

     Iter   Root       Total Energy       Delta E      C RMS

   @CI  0:     0     -2.843835083646   -4.2724E+00   2.7181E-15  
    Warning: Norm of correction (root 0) is < 1.0E-13
   @CI  1:     0     -2.843835083646   0.0000E+00   5.0912E-14 c

   ==> Energetics <==

    SCF energy =           -2.834060896451302
    Total CI energy =      -2.843835083646052

   ==> FCI root 0 information <==

    FCI Root 0 energy =    -2.843835083646052

   The 4 most important determinants:

    *   1   -0.997713  (    0,    0)  1AX 
    *   2    0.065541  (    1,    1)  2AX 
    *   3   -0.011683  (    0,    1)  1AA 2AB 
    *   4   -0.011683  (    1,    0)  1AB 2AA 

		 "A good bug is a dead bug" 

			 - Starship Troopers

		 "I didn't write FORTRAN.  That's the problem."

			 - Edward Valeev

*** Psi4 exiting successfully. Buy a developer a beer!
